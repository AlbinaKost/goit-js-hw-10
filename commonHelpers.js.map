{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// const btnStart = document.querySelector('button');\n// const day = document.querySelector('.value[ data-days]');\n// const hour = document.querySelector('.value[ data-hours]');\n// const minute = document.querySelector('.value[ data-minutes]');\n// const second = document.querySelector('.value[ data-seconds]');\n// btnStart.disabled = true;\n// let date = Date.now();\n// let userSelectedDate;\n// let difference;\n// let setIntervalId;\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     // console.log(selectedDates[0]);\n//     userSelectedDate = selectedDates[0];\n//     if (userSelectedDate < Date.now()) {\n//       iziToast.show({\n//         message: 'Please choose a date in the future',\n//         messageColor: '#FFFFFF',\n//         backgroundColor: '#B51B1B',\n//         position: 'topRight',\n//       });\n//     } else {\n//       btnStart.disabled = false;\n//       btnStart.style.background = '#4E75FF';\n//       btnStart.style.color = '#FFF';\n//     }\n//   },\n// };\n\n// flatpickr('#datetime-picker', options);\n\n// btnStart.addEventListener('click', e => {\n//   btnStart.disabled = true;\n//   btnStart.style.background = '#CFCFCF';\n//   btnStart.style.color = '#989898';\n//   difference = userSelectedDate - Date.now();\n//   timerNumber(convertMs(difference));\n//   setIntervalId = setInterval(() => {\n//     difference -= 1000;\n//     timerNumber(convertMs(difference));\n//     stopTimer(difference);\n//   }, 1000);\n// });\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function timerNumber({ days, hours, minutes, seconds }) {\n//   day.textContent = `${addLeadingZero(days)}`;\n//   hour.textContent = `${addLeadingZero(hours)}`;\n//   minute.textContent = `${addLeadingZero(minutes)}`;\n//   second.textContent = `${addLeadingZero(seconds)}`;\n// }\n\n// function stopTimer(difference) {\n//   if (difference <= 1000) {\n//     clearInterval(setIntervalId);\n//   }\n// }\n\n// function addLeadingZero(value) {\n//   return value.toString().padStart(2, '0');\n// }\n\nconst btnStart = document.querySelector('button');\nconst day = document.querySelector('.value[data-days]');\nconst hour = document.querySelector('.value[data-hours]');\nconst minute = document.querySelector('.value[data-minutes]');\nconst second = document.querySelector('.value[data-seconds]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\n\nbtnStart.disabled = true;\nlet userSelectedDate;\nlet difference;\nlet setIntervalId;\nlet flatpickrInstance;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < Date.now()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#FFFFFF',\n        backgroundColor: '#B51B1B',\n        position: 'topRight',\n      });\n    } else {\n      btnStart.disabled = false;\n      btnStart.style.background = '#4E75FF';\n      btnStart.style.color = '#FFF';\n    }\n  },\n};\n\nflatpickrInstance = flatpickr(dateTimePicker, options);\n\nbtnStart.addEventListener('click', () => {\n  btnStart.disabled = true;\n  btnStart.style.background = '#CFCFCF';\n  btnStart.style.color = '#989898';\n\n  // Disable Flatpickr after the timer starts\n  flatpickrInstance.destroy();\n\n  difference = userSelectedDate - Date.now();\n  timerNumber(convertMs(difference));\n\n  setIntervalId = setInterval(() => {\n    difference -= 1000;\n    timerNumber(convertMs(difference));\n    stopTimer(difference);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction timerNumber({ days, hours, minutes, seconds }) {\n  day.textContent = addLeadingZero(days);\n  hour.textContent = addLeadingZero(hours);\n  minute.textContent = addLeadingZero(minutes);\n  second.textContent = addLeadingZero(seconds);\n}\n\nfunction stopTimer(difference) {\n  if (difference <= 0) {\n    clearInterval(setIntervalId);\n  }\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}"],"names":["btnStart","day","hour","minute","second","dateTimePicker","userSelectedDate","difference","setIntervalId","flatpickrInstance","options","selectedDates","iziToast","flatpickr","timerNumber","convertMs","stopTimer","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IAqFA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAM,SAAS,cAAc,mBAAmB,EAChDC,EAAO,SAAS,cAAc,oBAAoB,EAClDC,EAAS,SAAS,cAAc,sBAAsB,EACtDC,EAAS,SAAS,cAAc,sBAAsB,EACtDC,EAAiB,SAAS,cAAc,kBAAkB,EAEhEL,EAAS,SAAW,GACpB,IAAIM,EACAC,EACAC,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBL,EAAmBK,EAAc,GAC7BL,EAAmB,KAAK,MAC1BM,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,gBAAiB,UACjB,SAAU,UAClB,CAAO,GAEDZ,EAAS,SAAW,GACpBA,EAAS,MAAM,WAAa,UAC5BA,EAAS,MAAM,MAAQ,OAE1B,CACH,EAEAS,EAAoBI,EAAUR,EAAgBK,CAAO,EAErDV,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBA,EAAS,MAAM,WAAa,UAC5BA,EAAS,MAAM,MAAQ,UAGvBS,EAAkB,QAAO,EAEzBF,EAAaD,EAAmB,KAAK,MACrCQ,EAAYC,EAAUR,CAAU,CAAC,EAEjCC,EAAgB,YAAY,IAAM,CAChCD,GAAc,IACdO,EAAYC,EAAUR,CAAU,CAAC,EACjCS,EAAUT,CAAU,CACrB,EAAE,GAAI,CACT,CAAC,EAED,SAASQ,EAAUE,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASP,EAAY,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDpB,EAAI,YAAcqB,EAAeJ,CAAI,EACrChB,EAAK,YAAcoB,EAAeH,CAAK,EACvChB,EAAO,YAAcmB,EAAeF,CAAO,EAC3ChB,EAAO,YAAckB,EAAeD,CAAO,CAC7C,CAEA,SAASL,EAAUT,EAAY,CACzBA,GAAc,GAChB,cAAcC,CAAa,CAE/B,CAEA,SAASc,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}